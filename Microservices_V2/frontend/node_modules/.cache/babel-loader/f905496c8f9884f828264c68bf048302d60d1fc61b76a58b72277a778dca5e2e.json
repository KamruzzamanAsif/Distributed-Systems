{"ast":null,"code":"var _jsxFileName = \"/home/vamps/Desktop/frontend/src/pages/notification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Import React and React hooks\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom'; // Import the useHistory hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationPage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const history = useHistory(); // Initialize the router hook\n\n  const fetchNotifications = async () => {\n    try {\n      // Retrieve the JWT token from localStorage\n      const token = localStorage.getItem('token');\n\n      // Set up headers with the JWT token\n      const headers = {\n        Authorization: token ? `${token}` : '' // Include the token if available\n      };\n\n      const response = await axios.get('http://localhost/notification/notifications', {\n        headers\n      });\n      const filteredNotifications = response.data.notifications.filter(notification => notification.user_email !== localStorage.getItem('email'));\n      setNotifications(filteredNotifications);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n\n      // Check for a 401 Unauthorized response from the server\n      if (error.response && error.response.status === 401) {\n        // Use the router to navigate to the signin page\n        history.push('/');\n      }\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n\n    // Fetch notifications every 5 seconds (5000 milliseconds)\n    const interval = setInterval(fetchNotifications, 5000);\n\n    // Clean up the interval when the component unmounts to avoid memory leaks\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-orange-50 rounded-lg shadow p-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, notification.notification_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NotificationPage, \"nOV5mdMrgk/gnjfb4jGhiUdMe4E=\", false, function () {\n  return [useHistory];\n});\n_c = NotificationPage;\nexport default NotificationPage;\nvar _c;\n$RefreshReg$(_c, \"NotificationPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationPage","_s","notifications","setNotifications","history","fetchNotifications","token","localStorage","getItem","headers","Authorization","response","get","filteredNotifications","data","filter","notification","user_email","error","console","status","push","interval","setInterval","clearInterval","children","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","notification_id","_c","$RefreshReg$"],"sources":["/home/vamps/Desktop/frontend/src/pages/notification.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Import React and React hooks\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom'; // Import the useHistory hook\n\nconst NotificationPage = () => {\n  const [notifications, setNotifications] = useState([]);\n  const history = useHistory(); // Initialize the router hook\n\n  const fetchNotifications = async () => {\n    try {\n      // Retrieve the JWT token from localStorage\n      const token = localStorage.getItem('token');\n\n      // Set up headers with the JWT token\n      const headers = {\n        Authorization: token ? `${token}` : '', // Include the token if available\n      };\n      const response = await axios.get('http://localhost/notification/notifications', { headers });\n      const filteredNotifications = response.data.notifications.filter(\n        (notification) => notification.user_email !== localStorage.getItem('email')\n      );\n      setNotifications(filteredNotifications);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n\n      // Check for a 401 Unauthorized response from the server\n      if (error.response && error.response.status === 401) {\n        // Use the router to navigate to the signin page\n        history.push('/');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchNotifications();\n\n    // Fetch notifications every 5 seconds (5000 milliseconds)\n    const interval = setInterval(fetchNotifications, 5000);\n\n    // Clean up the interval when the component unmounts to avoid memory leaks\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-2xl font-semibold mb-4\">Notifications</h1>\n        {notifications.map((notification) => (\n          <div key={notification.notification_id} className=\"bg-orange-50 rounded-lg shadow p-4 mb-4\">\n            <p>{notification.message}</p>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default NotificationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}